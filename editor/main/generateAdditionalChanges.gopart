func generateAdditionalChanges(config Config, existingChanges []FileContent, remainingContent string) []FileContent {
	client := createOpenAIClient(config)

	promptContent := getPromptContent(config.ChangesPrompt, "prompts/changes.txt")
	tmpl, err := template.New("changes").Parse(promptContent)
	if err != nil {
		log.Fatal(err, "in generateAdditionalChanges: template parsing")
	}

	existingChangesJSON, _ := json.Marshal(existingChanges)
	var promptBuffer bytes.Buffer
	err = tmpl.Execute(&promptBuffer, map[string]string{
		"Prompt":           config.Prompt,
		"ExistingChanges":  string(existingChangesJSON),
		"RemainingContent": remainingContent,
		"ProjectName":      config.ProjectName,
	})
	if err != nil {
		log.Fatal(err, "in generateAdditionalChanges: template execution")
	}

	resp, err := client.CreateChatCompletion(
		context.Background(),
		openai.ChatCompletionRequest{
			Model: config.OrHigh,
			Messages: []openai.ChatCompletionMessage{
				{
					Role:    openai.ChatMessageRoleUser,
					Content: promptBuffer.String(),
				},
			},
		},
	)

	if err != nil {
		log.Fatal(err, "in generateAdditionalChanges")
	}

	fmt.Println("additional changes suggestion: ", resp.Choices[0].Message.Content)

	return parseChanges(config, resp.Choices[0].Message.Content)
}
